# name: CI Pipeline

# on: 
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.10
#     #----------------------------------------------
#     #  -----  install & configure poetry  -----
#     #----------------------------------------------
#     - name: Install Poetry
#       uses: snok/install-poetry@v1
#       with:
#         virtualenvs-create: true
#         virtualenvs-in-project: true
#         installer-parallel: true

#     #----------------------------------------------
#     #       load cached venv if cache exists
#     #----------------------------------------------
#     # - name: Load cached venv
#     #   id: cached-poetry-dependencies
#     #   uses: actions/cache@v3
#     #   with:
#     #     path: .venv
#     #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#     #----------------------------------------------
#     # install dependencies if cache does not exist
#     #----------------------------------------------
#     - name: Install dependencies
#       # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#       run: poetry install --no-interaction --no-root
#     - name: Lint with pylint
#       run: |
#         source .venv/bin/activate
#         poetry run pylint --disable=R,C **/*.py
#     - name: Format with black
#       run: |
#         poetry run black .
#     - name: Cache dependencies
#       uses: actions/cache@v2
#       with:
#         path: .venv
#         key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

#   test:
#     runs-on: ubuntu-latest
#     needs: lint
#     steps:
#     - uses: actions/checkout@v4
#     - name: Load cached venv
#       id: cached-poetry-dependencies
#       uses: actions/cache@v3
#       with:
#         path: .venv
#         key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#     - name: Install Poetry
#       uses: snok/install-poetry@v1
#       with:
#         virtualenvs-create: true
#         virtualenvs-in-project: true
#         installer-parallel: true

#     - name: Use Cache from Lint Job
#       run: |
#         source .venv/bin/activate
#         poetry install

#     # - uses: actions/checkout@v2
#     # - name: Set up Python
#     #   uses: actions/setup-python@v2
#     #   with:
#     #     python-version: 3.10
#     # - name: Install dependencies
#     #   run: |
#     #     python -m pip install --upgrade pip
#     #     pip install pytest
#     - name: Test with pytest
#       run: |
#         poetry run pytest .
    