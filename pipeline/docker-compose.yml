version: '3.8'

services:
  mlflow-db:
    image: mysql:8.0
    container_name: mlflow-db
    restart: always
    environment:
      MYSQL_DATABASE: mlflow
      MYSQL_USER: mlflow
      MYSQL_PASSWORD: mlflow123
      MYSQL_ROOT_PASSWORD: root123
    ports:
      - "3307:3306"
    volumes:
      - mlflow-db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: mlflow-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow-server:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    container_name: mlflow-server
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=mysql+pymysql://mlflow:mlflow123@mlflow-db:3306/mlflow
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_S3_IGNORE_TLS=true
    depends_on:
      mlflow-db:
        condition: service_healthy
      minio:
        condition: service_healthy

  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petcare-pipeline
    ports:
      - "8501:8501"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_S3_IGNORE_TLS=true
    volumes:
      - ./data_storage:/app/data_storage
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      - mlflow-server

volumes:
  mlflow-db-data:
  minio-data: 