version: "3.8"

services:

  init-data:
    image: busybox
    volumes:
      - ./mlserver/data_storage/train_results/default_weight:/initial_data  # 로컬의 초기 데이터
      - data_storage:/app/data_storage  # 타겟 볼륨
    command: >
      sh -c "ls -la /initial_data && cp -r /initial_data/default_weight /app/data_storage/train_results/default_weight"



  dashboard:
    build:
      context: dashboard
    volumes:
      - data_storage:/app/data_storage
    ports:
      - 8501:8501
    networks:
      - backend
    command:
      - "streamlit"
      - "run"
      - "src/app.py"

  pipeline:
    build:
      context: pipeline
    depends_on:
      - mlserver1
      - mlserver2
    environment:
      - MLSERVER1_HOST=${MLSERVER1_HOST}
      - MLSERVER2_HOST=${MLSERVER2_HOST}
      - MODEL_WEIGHT_PATH=${MODEL_WEIGHT_PATH}
    volumes:
      - data_storage:/app/data_storage
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 소켓 마운트해야 mlserver 재시작 요청 가능
    ports:
      - 8000:8000
    networks:
      - backend
    command:
      - "poetry"
      - "run"
      - "streamlit"
      - "run"
      - "main.py"
      - "--server.port"
      - "8000"

  mlserver1:
    container_name: petcare-mlserver1
    build:
      context: mlserver
    ports:
      - 8080:8080
      - 8081:8081
    environment:
      - MODEL_WEIGHT_PATH=/app/data_storage/train_results/default_weight
    networks:
      - backend
    volumes:
      - data_storage:/app/data_storage
    depends_on:
      - init-data

  mlserver2:
    container_name: petcare-mlserver2
    build:
      context: mlserver
    ports:
      - 8082:8080
      - 8083:8081
    environment:
      - MODEL_WEIGHT_PATH=/app/data_storage/train_results/default_weight
    networks:
      - backend
    volumes:
      - data_storage:/app/data_storage
    depends_on:
      - init-data


  dbscheduler:  
    build:
      context: scheduler
    ports:
      - 8090:8090
    networks:
      - backend
    environment:
      - DB_URL=${DB_URL}
      - DB_PORT=${DB_PORT}
      - USER_NAME=${USER_NAME}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SEND_EMAIL_ADDRESS=${SEND_EMAIL_ADDRESS}
      - RECEIVE_EMAIL_ADDRESS=${RECEIVE_EMAIL_ADDRESS}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - MODEL_SERVER_URL=${MODEL_SERVER_URL} # nginx 통해서 접근
      - RECORD_SAVE_PATH=${RECORD_SAVE_PATH}

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - mlserver1
      - mlserver2

networks:
  backend:
volumes:
  data_storage: